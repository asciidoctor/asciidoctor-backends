- link_assets = attr? 'link-assets'
- endline = "\n"
doctype 5
/ This should really be a media query in the css
html lang=(attr :lang, 'en' unless attr? :nolang) class="aspect-#{attr 'dzslides-aspect', '4-3'}"
  head
    meta charset=(attr :encoding, 'UTF-8')
    meta name='generator' content="Asciidoctor #{attr 'asciidoctor-version'}, dzslides backend"
    title=((doctitle :sanitize => true) || (attr 'untitled-label'))
    - {:description => 'description', :author => 'author', :copyright => 'copyright',
       :revdate => 'presdate', :corpname => 'company'}.each do |key, name|
      - if attr? key
        meta name=name content=(attr key)
    link rel='stylesheet' href="https://fonts.googleapis.com/css?#{attr 'dzslides-fonts', 'family=Oswald'}"
    - if attr? :icons, 'font'
      - if (attr 'iconfont-remote', '')
        link rel='stylesheet' href=(attr 'iconfont-cdn', 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.5.0/css/font-awesome.min.css')
      - else
        link rel='stylesheet' href=normalize_web_path("#{attr 'iconfont-name', 'font-awesome'}.css", (attr :stylesdir, ''))
    - if attr? 'source-highlighter'
      - if link_assets
        link rel='stylesheet' href="./dzslides/themes/highlight/#{attr 'dzslides-highlight', 'default'}.css"
      - else
        style
          =endline
          =::IO.read %(./dzslides/themes/highlight/#{attr 'dzslides-highlight', 'default'}.css)
    - if link_assets
      link rel='stylesheet' href="./dzslides/themes/style/#{attr 'dzslides-style', 'default'}.css"
    - else
      style
        =endline
        =::IO.read %(./dzslides/themes/style/#{attr 'dzslides-style', 'default'}.css)
    - unless (attr :stylesheet).nil_or_empty?
      - if link_assets
        link rel='stylesheet' href=normalize_web_path((attr :stylesheet), (attr :stylesdir, ''))
      - else
        style
          =endline
          =read_asset(normalize_system_path((attr :stylesheet), (attr :stylesdir, '')), :warn_on_failure => true)
    /bug in full screen image if dzslides.css is included before ours
    - if link_assets
      link rel='stylesheet' href='./dzslides/core/dzslides.css'
      link rel='stylesheet' href="./dzslides/themes/transition/#{attr 'dzslides-transition', 'horizontal-slide'}.css"
    - else
      style
        =endline
        =::IO.read './dzslides/core/dzslides.css'
      style
        =endline
        =::IO.read %(./dzslides/themes/transition/#{attr 'dzslides-transition', 'horizontal-slide'}.css)
    - if attr? :math
      script type='text/x-mathjax-config'
        |MathJax.Hub.Config({
           tex2jax: {
             inlineMath: [['\\(','\\)']],
             displayMath: [['\\[','\\]']],
             ignoreClass: 'nostem|nolatexmath'
           },
           asciimath2jax: {
             delimiters: [['\\$','\\$']],
             ignoreClass: 'nostem|noasciimath'
           }
         });
      script src='http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_HTMLorMML'
    =docinfo :head, '.html'
  body id=@id
    section.title
      h1=@header.title
      footer
        span.author #{attr :author}#{(attr :corpname) && " - #{attr :corpname}"}
        - if attr? :email
          '
          span.email =sub_macros(attr :email)
        - if (authorcount = (attr :authorcount).to_i) > 1
          - (2..authorcount).each do |idx|
            span.divider &nbsp;&middot;&nbsp;
            span.author =(attr "author_#{idx}")
            - if attr? "email_#{idx}"
              '
              span.email =sub_macros(attr "email_#{idx}")
        - if attr? :hashtag
          span.hashtag=(attr :hashtag)
    =content
    - if link_assets
      script src='./dzslides/core/dzslides.js'
    - else
      script
        =endline
        =IO.read './dzslides/core/dzslides.js'
    - if attr? 'dzslides-highlight'
      - if link_assets
        script src='./dzslides/highlight/highlight.pack.js'
      - else
        script
          =endline
          =::IO.read './dzslides/highlight/highlight.pack.js'
      script hljs.initHighlightingOnLoad()
