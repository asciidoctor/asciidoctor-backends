!!! 5
%html{:lang=>(attr :lang, 'en')}
  %head
    %meta(http-equiv='Content-Type' content="text/html; charset=#{attr :encoding}")
    %meta(name='generator' content="Asciidoctor #{attr 'asciidoctor-version'}")
    - if attr? :description
      %meta(name='description'){:content=>(attr :description)}
    - if attr? :keywords 
      %meta(name='keywords'){:content=>(attr :keywords)}
    %title=doctitle
    - unless (attr :stylesheet, '').empty?
      %link(rel="stylesheet"){:href=>(attr? :stylesdir) ? File.join((attr :stylesdir), (attr :stylesheet)) : (attr :stylesheet)}
    - case attr 'source-highlighter'
    - when 'coderay'
      - if (attr 'coderay-css', 'class') == 'class'
        -# hackish, find a way to locate this function in a more generic namespace
        =Asciidoctor::HTML5::DocumentTemplate.default_coderay_stylesheet
    - when 'highlightjs'
      %link(rel='stylesheet' href="#{attr :highlightjsdir, 'http://cdnjs.cloudflare.com/ajax/libs/highlight.js/7.3'}/styles/#{attr 'highlightjs-theme', 'default'}.min.css")
      %script(src="#{attr :highlightjsdir, 'http://cdnjs.cloudflare.com/ajax/libs/highlight.js/7.3'}/highlight.min.js")
      %script hljs.initHighlightingOnLoad()
    %link(rel="stylesheet" href="deck.js/core/deck.core.css")
    %link(rel="stylesheet" href="deck.js/extensions/goto/deck.goto.css")
    %link(rel="stylesheet" href="deck.js/extensions/menu/deck.menu.css")
    %link(rel="stylesheet" href="deck.js/extensions/navigation/deck.navigation.css")
    %link(rel="stylesheet" href="deck.js/extensions/status/deck.status.css")
    %link(rel="stylesheet" href="deck.js/extensions/hash/deck.hash.css")

    %link(rel="stylesheet" href="deck.js/themes/style/#{attr :deckjs_theme}.css")
    %link(rel="stylesheet" id="transition-theme-link" href="deck.js/themes/transition/#{attr :deckjs_transition}.css")

    - if attr? :customjs
      %script(src="#{:customjs}.js")
    - if attr? :customcss
      %link(rel="stylesheet" href="#{:customcss}.css")
    %script(src="deck.js/modernizr.custom.js")
  %body{:id=>@id, :class=>['deck-container',(attr :doctype)], :style=>("max-width: #{attr 'max-width'};" if (attr? 'max-width'))}
    -# Asciidoctor-specific feature to disable header entirely
    - unless noheader
      -# AsciiDoc leaves an empty header div even if there's no doctitle
      %section(class="slide" id="title-slide")
        - unless notitle
          %h1=header.title
        - if attr? :author
          %span#author=(attr :author)
          %br
        - if attr? :email
          %span#email.monospaced &lt;#{attr :email}&gt;
          %br
        - if attr? :revnumber
          %span#revnumber version #{attr :revnumber}#{(attr? :revdate) ? ',' : ''}
        - if attr? :revdate
          %span#revdate=(attr :revdate)
        - if attr? :revremark
          %br
          %span#revremark=(attr :revremark)
      =content
    - if attr? :navigation
      %a(href="#" class="deck-prev-link" title="Previous") &#8592;
      %a(href="#" class="deck-next-link" title="Next") &#8594;
    - if attr? :status
      %p.deck-status
        %span.deck-status-current
        \/
        %span.deck-status-total

    %a(href="." title="Permalink to this slide" class="deck-permalink") #
    
    %script(src="deck.js/jquery-1.7.2.min.js")
    %script(src="deck.js/core/deck.core.js")
    %script(src="deck.js/core/deck.core.js")
    %script(src="deck.js/extensions/hash/deck.hash.js")
    %script(src="deck.js/extensions/menu/deck.menu.js")
    %script(src="deck.js/extensions/goto/deck.goto.js")
    %script(src="deck.js/extensions/status/deck.status.js")
    %script(src="deck.js/extensions/navigation/deck.navigation.js")
    %script(src="deck.js/extensions/scale/deck.scale.js")
    - if attr? :split
      %script(src="deck.js/extensions/deck.split.js")
    :javascript
      $(function() {
        $.deck('.slide');
      });
    :css
      .slide.canvas-image {
      -moz-background-size: cover;
      -webkit-background-size: cover;
      -o-background-size: cover;
      background-size: cover;
      display: -moz-box;
      display: -webkit-box;
      display: -ms-box;
      display: box;
      -moz-box-orient: vertical;
      -webkit-box-orient: vertical;
      -ms-box-orient: vertical;
      box-orient: vertical;
      -moz-box-align: start;
      -webkit-box-align: start;
      -ms-box-align: start;
      box-align: start;
      -moz-box-pack: start;
      -webkit-box-pack: start;
      -ms-box-pack: start;
      box-pack: start;}

      .bottom-left {
        left: 1%;
        bottom: 20%; }

      .top-left {
        left: 1%;
        top: 20%; }

      .bottom-right {
        right: 1%;
        bottom: 20%; }

      .top-right {
        right: 1%;
        top: 20%; }

      .center-up {
        right: 50%;
        top: 1%;
      }

      .center-down {
        right: 50%;
        bottom: 1%;
      }
      .canvas-image .canvas-caption p {
        text-align: center;
        padding-top: 0;
        padding: 0;
        -moz-transform: none;
        -webkit-transform: none;
        -o-transform: none;
        -ms-transform: none;
        transform: none;
        display: inline;
        position: absolute;
        background-color: rgba(0, 0, 0, 0.7);
        font-weight: bold;
        font-size: 58px;
        -webkit-box-shadow: 2px 2px 2px #000;
        -moz-box-shadow: 2px 2px 2px #000;
        box-shadow: 2px 2px 2px #000;
        padding: 1rem;
        color: white; }
